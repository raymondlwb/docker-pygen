server {
	listen 80 default_server;
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;
	return 503;
}

{% for virtual_host, same_host_containers in containers|groupby('labels.virtual-host') %}
    {% if not virtual_host %} {% continue %} {% endif %}

    {% for context_path, matching_containers in same_host_containers|groupby('labels.context-path')
           if matching_containers|map(attribute='network.ports.tcp')|join|length %}
        {% set context_path = context_path|default('/', true) %}
        {% set server_name = '%s__%s'|format(virtual_host, context_path)|replace('/', '_') %}

upstream {{ server_name }} {
            {% for container in matching_containers if container.network.ip_addresses and container.network.ports.tcp %}
			# {{ container.name }}
			server {{ container.network.ip_addresses|first }}:{{ container.network.ports.tcp|first }};
			{% endfor %}
}
    {% else %}
        {% continue %}
    {% endfor %}

server {
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
	server_name {{ virtual_host }};
	proxy_buffering off;
	error_log /proc/self/fd/2;
	access_log /proc/self/fd/1;

	{% for context_path, matching_containers in same_host_containers|groupby('labels.context-path')
	       if matching_containers|map(attribute='network.ports.tcp')|join|length %}
	    {% set context_path = context_path|default('/', true) %}
        {% set server_name = '%s__%s'|format(virtual_host, context_path)|replace('/', '_') %}
	location {{ context_path }} {
		proxy_pass http://{{ server_name }};
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		# HTTP 1.1 support
		proxy_http_version 1.1;
		proxy_set_header Connection "";
	}
    {% endfor %}
}
{% endfor %}